# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET        /octhc                                                         controllers.HealthController.health

POST       /v1/kafka/cluster/:cluster/topic                               controllers.TopicController.create(cluster: String)
GET        /v1/kafka/topics/:topic                                        controllers.TopicController.getTopicInfo(topic: String)
GET        /v1/kafka/topics                                               controllers.TopicController.getAllTopics

GET        /v1/kafka/cluster/:cluster/credentials/:user                   controllers.AclController.getCredentials(cluster: String, user: String)
GET        /v1/kafka/cluster/:cluster/acls                                controllers.AclController.getAclsForTopic(cluster: String, topic: String)
POST       /v1/kafka/cluster/:cluster/user                                controllers.AclController.create(cluster: String)
POST       /v1/kafka/cluster/:cluster/acls                                controllers.AclController.createAclForTopic(cluster: String)
DELETE     /v1/kafka/acls/:id                                             controllers.AclController.deleteAcl(id: String)

GET        /v1/kafka/cluster/:cluster/schemas                             controllers.SchemaController.getSchemas(cluster: String)
GET        /v1/kafka/cluster/:cluster/schemas/:schema/versions            controllers.SchemaController.getSchemaVersions(cluster: String, schema: String)
GET        /v1/kafka/cluster/:cluster/schemas/:schema/versions/:version   controllers.SchemaController.getSchema(cluster: String, schema: String, version: Int)
POST       /v1/kafka/cluster/:cluster/topic-schema-mapping                controllers.TopicController.createSchemaMapping(cluster: String)
GET        /v1/kafka/cluster/:cluster/topics/:topic/topic-schema-mappings controllers.TopicController.getTopicSchemaMappings(cluster: String, topic: String)
POST       /v1/kafka/cluster/:cluster/topic-key-mapping                   controllers.TopicController.createKeyMapping(cluster: String)
GET        /v1/kafka/cluster/:cluster/configs                             controllers.TopicController.getAllConfigSets(cluster: String)
GET        /v1/kafka/cluster/:cluster/configs/:name                       controllers.TopicController.getConfigSet(cluster: String, name: String)