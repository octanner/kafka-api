
akka {}

play.http.secret.key = "PpEX30r>82cyI/ZPLUgU_?06UZCdX<yoN46kHG/hkwEEcy?m]]6L0M[E9BqNSAaq"
play.http.secret.key = ${?APPLICATION_SECRET}

play.modules {}

play.i18n {
  langs = [ "en" ]
}

play.http {
  session {}
  flash {}
}

play.server.netty {}

play.ws {
  ssl {}
}

play.cache {
}

play.filters {
  cors {}
  csrf {}
  headers {}
  hosts {}
}

play.filters.enabled=[]

play.evolutions {
  db.default.enabled = true
  db.default.autoApply=true
}

applyEvolutions.default=true

play.db {
  prototype {}
}

db {
  default {
    driver = "org.postgresql.Driver"
    url = "jdbc:postgresql://localhost/postgres"
    url = ${?BROKERDB}
    username = ${?BROKERDBUSER}
    password = ${?BROKERDBPASS}
  }
}

dev {
  zk=${?DEV_ZK}
  kafka {
    location=${?DEV_KAFKA_LOCATION}
    hostname=${?DEV_KAFKA_HOSTNAME}
    port=${?DEV_KAFKA_PORT}
    security.protocol=${?DEV_KAFKA_SECURITY_PROTOCOL}
    sasl.mechanism=${?DEV_KAFKA_SASL_MECHANISM}
    admin {
      username=${?DEV_KAFKA_ADMIN_USERNAME},
      password=${?DEV_KAFKA_ADMIN_PASSWORD}
    }
    topic.default {
      partitions=${?DEV_DEFAULT_PARTITIONS}
      replicas=${?DEV_DEFAULT_REPLICAS}
      retention.ms=${?DEV_DEFAULT_RETENTION}
    }
    avro.registry {
      location=${?DEV_KAFKA_AVRO_REGISTRY_LOCATION}
      hostname=${?DEV_KAFKA_AVRO_REGISTRY_HOSTNAME}
      port=${?DEV_KAFKA_AVRO_REGISTRY_PORT}
    }
  }
}


nonprod {
  zk=${?NONPROD_ZK}
  kafka {
    location=${?NONPROD_KAFKA_LOCATION}
    hostname=${?NONPROD_KAFKA_HOSTNAME}
    port=${?NONPROD_KAFKA_PORT}
    security.protocol=${?NONPROD_KAFKA_SECURITY_PROTOCOL}
    sasl.mechanism=${?NONPROD_KAFKA_SASL_MECHANISM}
    admin {
      username=${?NONPROD_KAFKA_ADMIN_USERNAME},
      password=${?NONPROD_KAFKA_ADMIN_PASSWORD}
    }
    topic.default {
      partitions=${?NONPROD_DEFAULT_PARTITIONS}
      replicas=${?NONPROD_DEFAULT_REPLICAS}
      retention.ms=${?NONPROD_DEFAULT_RETENTION}
    }
    avro.registry {
      location=${?NONPROD_KAFKA_AVRO_REGISTRY_LOCATION}
      hostname=${?NONPROD_KAFKA_AVRO_REGISTRY_HOSTNAME}
      port=${?NONPROD_KAFKA_AVRO_REGISTRY_PORT}
    }
  }
}

prod {
  zk=${?PROD_ZK}
  kafka {
    location=${?PROD_KAFKA_LOCATION}
    hostname=${?PROD_KAFKA_HOSTNAME}
    port=${?PROD_KAFKA_PORT}
    security.protocol=${?PROD_KAFKA_SECURITY_PROTOCOL}
    sasl.mechanism=${?PROD_KAFKA_SASL_MECHANISM}
    admin {
      username=${?PROD_KAFKA_ADMIN_USERNAME},
      password=${?PROD_KAFKA_ADMIN_PASSWORD}
    }
    topic.default {
      partitions=${?PROD_DEFAULT_PARTITIONS}
      replicas=${?PROD_DEFAULT_REPLICAS}
      retention.ms=${?PROD_DEFAULT_RETENTION}
    }
    avro.registry {
      location=${?PROD_KAFKA_AVRO_REGISTRY_LOCATION}
      hostname=${?PROD_KAFKA_AVRO_REGISTRY_HOSTNAME}
      port=${?PROD_KAFKA_AVRO_REGISTRY_PORT}
    }
  }
}

test {
  zk=${?TEST_ZK}
  kafka {
    location=${?TEST_KAFKA_LOCATION}
    hostname=${?TEST_KAFKA_HOSTNAME}
    port=${?TEST_KAFKA_PORT}
    security.protocol=${?TEST_KAFKA_SECURITY_PROTOCOL}
    sasl.mechanism=${?TEST_KAFKA_SASL_MECHANISM}
    admin {
      username=${?TEST_KAFKA_ADMIN_USERNAME},
      password=${?TEST_KAFKA_ADMIN_PASSWORD}
    }
    topic.default {
      partitions=${?TEST_DEFAULT_PARTITIONS}
      replicas=${?TEST_DEFAULT_REPLICAS}
      retention.ms=${?TEST_DEFAULT_RETENTION}
    }
    avro.registry {
      location=${?TEST_KAFKA_AVRO_REGISTRY_LOCATION}
      hostname=${?TEST_KAFKA_AVRO_REGISTRY_HOSTNAME}
      port=${?TEST_KAFKA_AVRO_REGISTRY_PORT}
    }
  }
}
